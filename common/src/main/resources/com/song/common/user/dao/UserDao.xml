<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.song.common.user.dao.UserDao">
  <resultMap id="BaseResultMap" type="com.song.common.user.vo.UserVo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="register_ip" jdbcType="INTEGER" property="registerIp" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="login_ip" jdbcType="INTEGER" property="loginIp" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, phone, email, password, real_name, status, register_ip, register_time, 
    login_ip, login_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.song.common.user.vo.UserVo">
    insert into t_user (id, user_name, phone, 
      email, password, real_name, 
      status, register_ip, register_time, 
      login_ip, login_time)
    values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{registerIp,jdbcType=INTEGER}, #{registerTime,jdbcType=TIMESTAMP}, 
      #{loginIp,jdbcType=INTEGER}, #{loginTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.song.common.user.vo.UserVo">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="registerIp != null">
        register_ip,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="registerIp != null">
        #{registerIp,jdbcType=INTEGER},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.song.common.user.vo.UserVo">
    update t_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="registerIp != null">
        register_ip = #{registerIp,jdbcType=INTEGER},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.song.common.user.vo.UserVo">
    update t_user
    set user_name = #{userName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      register_ip = #{registerIp,jdbcType=INTEGER},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      login_ip = #{loginIp,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>



  <select id="select" parameterType="com.song.common.user.vo.UserVo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user
    where 1=1
    <if test="userName != null">
      AND user_name = #{userName,jdbcType=VARCHAR}
    </if>
    <if test="phone != null">
      AND phone = #{phone,jdbcType=VARCHAR}
    </if>
    <if test="email != null">
      AND email = #{email,jdbcType=VARCHAR}
    </if>
    <if test="realName != null">
      AND real_name = #{realName,jdbcType=VARCHAR}
    </if>

    AND status = 'y'


  </select>
</mapper>